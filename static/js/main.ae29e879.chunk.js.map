{"version":3,"sources":["utilities/components/ModalCard.js","utilities/components/NoWeb3BrowserModal.js","utilities/components/NoWalletModal.js","utilities/GeneralUtil.js","utilities/components/WrongNetworkModal.js","utilities/components/TransactionFeeModal.js","utilities/components/ConnectionModal.js","utilities/components/TransactionConnectionModal.js","utilities/components/ConnectionPendingModal.js","utilities/components/UserRejectedConnectionModal.js","utilities/components/ValidationPendingModal.js","utilities/components/UserRejectedValidationModal.js","utilities/components/LowFundsModal.js","utilities/ConnectionModalsUtil.js","utilities/TransactionUtil.js","utilities/RimbleWeb3.js","components/Header.js","utilities/components/AccountOverview.js","utilities/components/ShortHash.js","components/WalletBlock.js","utilities/content/TransactionToastMessages.js","utilities/TransactionToastUtil.js","components/SmartContractControls.js","components/TransactionsCard.js","components/PrimaryCard.js","components/InstructionsCard.js","utilities/components/NetworkOverview.js","components/Web3Debugger.js","App.js","serviceWorker.js","index.js"],"names":["ModalCard","_ref","children","closeFunc","Object","objectWithoutProperties","react_default","a","createElement","index_es","border","mx","my","p","height","width","maxWidth","overflow","position","top","right","m","borderRadius","bg","Text","icononly","icon","mainColor","onClick","size","flexDirection","Body","_ref2","flex","style","Footer","_ref3","justifyContent","borderTop","borderColor","BackButton","_ref4","left","Outline","NoWeb3BrowserModal","renderContent","Fragment","h2","fontSize","fontWeight","lineHeight","RimbleUtil","isMobileDevice","href","title","target","span","bold","isOpen","this","props","components_ModalCard","closeModal","React","Component","NoWalletModal","as","mb","mt","GeneralUtil","hasMetaMask","window","ethereum","isMetaMask","isAndroid","test","navigator","userAgent","isIos","MSStream","WrongNetworkModal","_this","network","required","name","textTransform","current","RimbleUtils","display","alignItems","TransactionFeeModal","h4","flexWrap","px","color","ConnectionModal","state","showTxFees","toggleShowTxFees","e","console","log","preventDefault","setState","renderModalContent","mr","renderConnectButton","validateAccount","components_TransactionFeeModal","TransactionConnectionModal","h5","ConnectionPendingModal","UserRejectedConnectionModal","sendMessageAgain","event","initAccount","ValidationPendingModal","UserRejectedValidationModal","LowFundsModal","showSecondary","toggleQRVisible","pr","pl","pt","pb","zIndex","maxHeight","alignContent","py","h3","bottom","value","account","address","ConnectionModalUtil","components_NoWeb3BrowserModal","modals","methods","closeNoWeb3BrowserModal","data","noWeb3BrowserModalIsOpen","transaction","components_NoWalletModal","closeNoWalletModal","noWalletModalIsOpen","components_WrongNetworkModal","closeWrongNetworkModal","wrongNetworkModalIsOpen","components_ConnectionModal","closeConnectionModal","connectionModalIsOpen","accountValidated","currentNetwork","components_TransactionConnectionModal","closeTransactionConnectionModal","transactionConnectionModalIsOpen","components_ConnectionPendingModal","closeConnectionPendingModal","accountConnectionPending","components_UserRejectedConnectionModal","closeUserRejectedConnectionModal","userRejectedConnect","components_ValidationPendingModal","closeValidationPendingModal","accountValidationPending","components_UserRejectedValidationModal","closeUserRejectedValidationModal","userRejectedValidation","components_LowFundsModal","closeLowFundsModal","lowFundsModalIsOpen","TransactionUtil","RimbleTransactionContext","createContext","contract","accountBalance","accountBalanceLow","web3","web3Fallback","transactions","checkPreflight","initWeb3","initContract","rejectAccountConnect","rejectValidation","connectAndValidateAccount","isCorrectNetwork","checkNetwork","openNoWeb3BrowserModal","openConnectionPendingModal","openUserRejectedConnectionModal","openValidationPendingModal","openUserRejectedValidationModal","openWrongNetworkModal","openTransactionConnectionModal","openLowFundsModal","meta","RimbleTransaction","web3Preflight","validBrowser","objectSpread","web3ActionPreflight","checkModernBrowser","_callee","regenerator_default","wrap","_context","prev","next","browserIsWeb3Capable","abrupt","stop","_callee2","web3Provider","_context2","Web3","currentProvider","providers","HttpProvider","_callee3","abi","_context3","createContract","_callee4","_context4","eth","Contract","error","toastProvider","addMessage","variant","_callee5","_context5","enable","then","wallets","getAccountBalance","pollAccountUpdates","t0","accounts","_callee6","localAccount","_context6","getBalance","isNaN","utils","fromWei","parseFloat","determineAccountLowBalance","accountBalanceMinimum","config","secondaryMessage","_callee7","_context7","personal","sign","fromUtf8","signature","callback","_callee8","_context8","openConnectionModal","getRequiredNetwork","networkId","requiredNetwork","networkName","id","getNetworkId","_callee9","_context9","net","getId","getNetworkName","_callee10","_context10","getNetworkType","_callee11","_context11","requiresUpdate","accountInterval","setInterval","isConnected","toLowerCase","clearInterval","contractMethodSendWrapper","contractMethod","createTransaction","addTransaction","method","type","status","updateTransaction","_this$state","send","from","on","hash","transactionHash","recentEvent","confirmationNumber","receipt","confirmationCount","actionHref","actionText","created","Date","now","lastUpdated","concat","updatedTransaction","shortenHash","shortHash","txStart","substr","txEnd","length","openNoWalletModal","Provider","assign","ConnectionModalsUtil","utilities_TransactionUtil","Consumer","Header","AccountOverview","trimEth","Math","round","toFixed","roundedBalance","renderAs","word-break","WalletBlock","handleConnectAccount","result","components_AccountOverview","TransactionToastMessages","initialized","message","started","pending","confirmed","success","TransactionToastUtil","collectionHasNewObject","prevCollection","currentCollection","keys","getNewObjectFromCollection","objectKey","filter","key","includes","map","getUpdatedObjectFromCollection","object","getTransactionFromCollection","identifier","collection","getUpdatedTransaction","tx","currentTx","prevTx","processTransactionUpdates","prevProps","showTransactionToast","toastMeta","getTransactionToastMeta","transactionToastMeta","prevState","ref","node","contractAbi","constant","inputs","outputs","payable","stateMutability","SmartContractControls","needsUpdate","getNumber","esm_extends","getCounter","call","Number","toString","catch","resetCounter","incrementCounter","txStatus","decrementCounter","_this2","disabled","textAlign","TransactionTable","styled","Table","_templateObject","TransactionsCard","keyName","keyIndex","txHash","eventCreated","eventUpdated","toDateString","toTimeString","PrimaryCard","RimbleWeb3","components_SmartContractControls","components_TransactionsCard","utilities_TransactionToastUtil","InstructionsCard","ml","route","showRoute","alignSelf","NetworkOverview","getNetworkCircleColor","circleColor","networkCircle","backgroundColor","DebuggerButtons","Web3Debugger","borderBottom","components_NetworkOverview","Web3Debugger_DebuggerButtons","App","needsPreflight","components_Header","dist_index_umd_default","onWeb3Fallback","role","aria-label","network_indicator_dist_index_umd_default","components_WalletBlock","components_PrimaryCard","components_Web3Debugger","components_InstructionsCard","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ae29e879.chunk.js","sourcesContent":["import React from \"react\";\nimport {\n  Box,\n  Flex,\n  Card,\n  Button,\n} from \"rimble-ui\";\n\nconst ModalCard = ({children, closeFunc, ...props}) => (\n  <Card\n    border={0}\n    mx={'auto'}\n    my={'auto'}\n    p={0}\n    height={['100vh', 'auto']}\n    width={['auto']}\n    maxWidth={'960px'}\n    overflow={'hidden'}\n  >\n    <Box\n      position={\"absolute\"}\n      top={'0'}\n      right={'0'}\n      m={3}\n      borderRadius={'100%'}\n      bg={'white'}\n    >\n      <Button.Text\n        icononly\n        icon={\"Close\"}\n        mainColor={\"moon-gray\"}\n        onClick={closeFunc}\n        size={'2.5rem'}\n      />\n    </Box>\n    <Flex flexDirection={'column'} height={'100%'}>\n      {children}\n    </Flex>\n  </Card>\n);\n\nModalCard.Body = ({children, ...props}) => (\n  <Flex flex={'1 1 auto'} style={{ overflow: 'auto' }} >\n    <Box width={1} p={['4', '5']} m={'auto'}>\n      {children}\n    </Box>\n  </Flex>\n);\n\nModalCard.Footer = ({children, ...props}) => (\n  <Flex\n    flex={'1 0 auto'}\n    justifyContent={'center'}\n    borderTop={1}\n    borderColor={'light-gray'}\n    p={3}\n  >\n    {children}\n  </Flex>\n);\n\n\nModalCard.BackButton = ({onClick, ...props}) => (\n  <Box\n    position={'absolute'}\n    top={'0'}\n    left={'0'}\n    m={3}\n    bg={'white'}\n  >\n    <Button.Outline\n      onClick={onClick}\n      icononly\n      icon={'ArrowBack'}\n      size={'2.5rem'}\n    />\n  </Box>\n);\n\nexport default ModalCard;\n","import React from \"react\";\nimport { Box, Heading, Text, Modal, Link } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport RimbleUtil from \"@rimble/utils\";\n\nclass NoWeb3BrowserModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2\n          fontSize={4}\n          fontWeight={3}\n          lineHeight={\"1.375em\"}\n          my={3}\n        >\n          Switch browsers to use the Rimble App Demo\n        </Heading.h2>\n\n        {RimbleUtil.isMobileDevice() ? (\n          <Text my={4}>\n            You can't use our blockchain features, like increasing the count\n            value, in this browser. We recommend using{\" \"}\n            <Link\n              href=\"https://status.im/\"\n              title=\"status.im website\"\n              target=\"_blank\"\n            >\n              Status\n            </Link>\n            ,{\" \"}\n            <Link\n              href=\"https://www.cipherbrowser.com/\"\n              title=\"Cipher Wallet\"\n              target=\"_blank\"\n            >\n              Cipher\n            </Link>{\" \"}\n            or{\" \"}\n            <Link\n              href=\"https://wallet.coinbase.com/\"\n              title=\"Coinbase Wallet\"\n              target=\"_blank\"\n            >\n              Coinbase wallet\n            </Link>{\" \"}\n            browsers.\n          </Text>\n        ) : (\n          <Box>\n            <Text my={4}>\n              You can't use our blockchain features, like increasing the\n              count value, in this browser. Switch to{\" \"}\n              <Link\n                href=\"https://brave.com/download/\"\n                title=\"Download Brave browser\"\n                target=\"_blank\"\n              >\n                Brave\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.mozilla.org/\"\n                title=\"Download FireFox browser\"\n                target=\"_blank\"\n              >\n                FireFox\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.opera.com/download\"\n                title=\"Download Opera Browser\"\n                target=\"_blank\"\n              >\n                Opera\n              </Link>\n              , or{\" \"}\n              <Link\n                href=\"https://www.google.com/chrome/\"\n                title=\"Download Chrome browser\"\n                target=\"_blank\"\n              >\n                Chrome\n              </Link>{\" \"}\n              to continue.\n            </Text>\n\n            <Text>\n              <Text.span bold>Rather use your phone?</Text.span> You can use\n              the Rimble App Demo in mobile browser wallets like{\" \"}\n              <Link\n                href=\"https://status.im/\"\n                title=\"status.im website\"\n                target=\"_blank\"\n              >\n                Status\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.cipherbrowser.com/\"\n                title=\"Cipher Wallet\"\n                target=\"_blank\"\n              >\n                Cipher\n              </Link>{\" \"}\n              or{\" \"}\n              <Link\n                href=\"https://wallet.coinbase.com/\"\n                title=\"Coinbase Wallet\"\n                target=\"_blank\"\n              >\n                Coinbase wallet\n              </Link>\n              .\n            </Text>\n          </Box>\n        )}\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWeb3BrowserModal;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Modal,\n  Link,\n  MetaMaskButton\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nclass NoWalletModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>\n          Install MetaMask to use the Rimble App Demo\n        </Heading.h2>\n\n        <Text my={4}>\n          MetaMask is a browser extension that will let you use our\n          blockchain features in this browser. It may take you a few minutes\n          to set up your MetaMask account.\n        </Text>\n\n        <MetaMaskButton\n          as={\"a\"}\n          href=\"https://metamask.io\"\n          target=\"_blank\"\n          title=\"MetaMask website\"\n          mb={[5, 0]}\n        >\n          Install MetaMask\n        </MetaMaskButton>\n\n        <Text mt={\"4\"}>\n          <Text.span bold>Rather use your phone?</Text.span> You can use the\n          Rimble App Demo in mobile browser wallets like{\" \"}\n          <Link\n            href=\"https://status.im/\"\n            title=\"status.im website\"\n            target=\"_blank\"\n          >\n            Status\n          </Link>\n          ,{\" \"}\n          <Link\n            href=\"https://www.cipherbrowser.com/\"\n            title=\"Cipher Wallet\"\n            target=\"_blank\"\n          >\n            Cipher\n          </Link>{\" \"}\n          or{\" \"}\n          <Link\n            href=\"https://wallet.coinbase.com/\"\n            title=\"Coinbase Wallet\"\n            target=\"_blank\"\n          >\n            Coinbase wallet\n          </Link>\n          .\n        </Text>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWalletModal;\n","// Checks for MetaMask\nconst GeneralUtil = {\n  hasMetaMask: () => {\n    let hasMetaMask = false;\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasMetaMask = typeof window.ethereum.isMetaMask !== \"undefined\";\n    }\n\n    return hasMetaMask;\n  },\n  // Current device is Android\n  isAndroid: () => {\n    const isAndroid = /android/i.test(navigator.userAgent) ? true : false;\n\n    return isAndroid;\n  },\n\n  // Current device is iOS\n  isIos() {\n    const isIos =\n      /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream\n        ? true\n        : false;\n\n    return isIos;\n  }\n};\n\nexport default GeneralUtil;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Flex,\n  Modal,\n  Button,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\nimport RimbleUtils from \"@rimble/utils\";\n\nclass WrongNetworkModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>\n          Switch to the {this.props.network.required.name} network in{\" \"}\n          {GeneralUtil.hasMetaMask() ? `MetaMask` : `Settings`}\n        </Heading.h2>\n\n        <Text my={4}>\n          The Rimble Demo App only works on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {this.props.network.required.name}\n          </Text.span>{\" \"}\n          network. You’re currently on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {\" \"}\n            {this.props.network.current.name}\n          </Text.span>{\" \"}\n          network.\n        </Text>\n\n        {GeneralUtil.hasMetaMask() && !RimbleUtils.isMobileDevice() ? (\n          <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n            <Flex alignItems={\"center\"}>\n              <Box position={\"relative\"} width={\"4em\"}>\n                <Box>\n                  <Loader size={\"3em\"} />\n                </Box>\n              </Box>\n              <Box>\n                <Text fontWeight={4}>Waiting for the right network...</Text>\n                <Text fontWeight={2}>\n                  Go to your MetaMask extension to switch\n                </Text>\n              </Box>\n            </Flex>\n          </Box>\n        ) : null}\n\n        <Box display={[\"block\", \"none\"]}>\n          <Button onClick={this.props.closeModal} width={1}>\n            OK\n          </Button>\n        </Box>\n      </React.Fragment>\n    )\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default WrongNetworkModal;\n","import React from \"react\";\nimport { Heading, Text, Box, Flex, Icon } from \"rimble-ui\";\n\nfunction TransactionFeeModal(props) {\n  return (\n    <Box>\n      <Heading.h2>Transaction fees</Heading.h2>\n      <Text my={3}>\n        You need to pay a fee to use the Ethereum blockchain. This pays for\n        someone to process your transaction and store the data.\n      </Text>\n      <Heading.h4>What are you paying for?</Heading.h4>\n      <Flex flexWrap={\"wrap\"} justifyContent={\"space-between\"} mx={-2} my={3}>\n        <Box width={[1, 1, 1 / 3]} px={2} my={3}>\n          <Flex justifyContent={\"center\"}>\n            <Icon color=\"primary\" size=\"60\" name=\"Fingerprint\" />\n          </Flex>\n          <Heading.h4>Undeniable proof</Heading.h4>\n          <Text>\n            You get a public record of any funds you send or receive, a bit like\n            a deed for a house.\n          </Text>\n        </Box>\n        <Box width={[1, 1, 1 / 3]} px={2} my={3}>\n          <Flex justifyContent={\"center\"}>\n            <Icon color=\"primary\" size=\"60\" name=\"EnhancedEncryption\" />\n          </Flex>\n          <Heading.h4>Unbreakable encryption</Heading.h4>\n          <Text>Your funds can only ever go to your intended recipients.</Text>\n        </Box>\n        <Box width={[1, 1, 1 / 3]} px={2} my={3}>\n          <Flex justifyContent={\"center\"}>\n            <Icon color=\"primary\" size=\"60\" name=\"AccountBalance\" />\n            <Icon color=\"primary\" size=\"60\" name=\"NotInterested\" />\n          </Flex>\n          <Heading.h4>Unparalleled control</Heading.h4>\n          <Text>\n            You can pay or get paid without using any banks or companies.\n          </Text>\n        </Box>\n      </Flex>\n    </Box>\n  );\n}\n\nexport default TransactionFeeModal;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Icon,\n  Modal,\n  Flex,\n  Box,\n  Button,\n  MetaMaskButton,\n  Link\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport TransactionFeeModal from \"./TransactionFeeModal\";\nimport GeneralUtil from \"../GeneralUtil\";\n\nclass ConnectionModal extends React.Component {\n  state = {\n    showTxFees: false\n  };\n\n  toggleShowTxFees = e => {\n    console.log(\"showTxFees\", this.state.showTxFees);\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  };\n\n  renderModalContent = () => {\n    return (\n      <React.Fragment>\n        {/* Start primary content */}\n        <Box mt={4} mb={5}>\n          <Heading fontSize={[4, 5]}>Before you connect</Heading>\n          <Text fontSize={[2, 3]} my={3}>\n            Connecting lets you use the Rimble Demo App via your\n            Ethereum account.\n          </Text>\n        </Box>\n\n        <Flex\n          flexDirection={['column', 'row']}\n          justifyContent={\"space-between\"}\n          my={[0, 4]}\n        >\n          <Box flex={'1 1'} width={1} mt={[3, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"Public\"\n                color=\"primary\"\n                size=\"4rem\"\n              />\n            </Flex>\n            <Heading fontSize={2}>The blockchain is public</Heading>\n            <Text fontSize={1}>\n              Your Ethereum account activity is public on the\n              blockchain. Choose an account you don’t mind being\n              linked with your activity here.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[3, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"AccountBalanceWallet\"\n                color=\"primary\"\n                size=\"4rem\"\n              />\n            </Flex>\n            <Heading fontSize={2}>Have some Ether for fees</Heading>\n            <Text fontSize={1} mb={3}>\n              You’ll need Ether to pay transaction fees. Buy Ether\n              from exchanges like Coinbase.\n            </Text>\n            <Link\n              title=\"Learn about Ethereum transaction fees\"\n              as={\"a\"}\n              href=\"#\"\n              onClick={this.toggleShowTxFees}\n            >\n              What are transaction fees?\n            </Link>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[3, 0]} mb={[4, 0]}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"People\"\n                color=\"primary\"\n                size=\"4rem\"\n              />\n            </Flex>\n            <Heading fontSize={2}>Have the right account ready</Heading>\n            <Text fontSize={1}>\n              If you have multiple Ethereum accounts, check that the\n              one you want to use is active in your browser.\n            </Text>\n          </Box>\n        </Flex>\n        {/* End Modal Content */}\n      </React.Fragment>\n    );\n  }\n\n  renderConnectButton = () => {\n    if (GeneralUtil.hasMetaMask()) {\n      return (\n        <MetaMaskButton\n          onClick={this.props.validateAccount}\n          width={[1, 1/2]}\n          mb={[5, 0]}\n        >\n          Connect with MetaMask\n        </MetaMaskButton>\n      )\n    } else {\n      return (\n        <Button\n          onClick={this.props.validateAccount}\n          width={[1, 'auto']}\n        >\n          Connect\n        </Button>\n      )\n    }\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n\n          {this.state.showTxFees === false ? (\n            <React.Fragment>\n              <ModalCard.Body>\n                {this.renderModalContent()}\n              </ModalCard.Body>\n              <ModalCard.Footer>\n                {this.renderConnectButton()}\n              </ModalCard.Footer>\n            </React.Fragment>\n          ) : (\n            <ModalCard.Body>\n              <TransactionFeeModal />\n              <ModalCard.BackButton onClick={this.toggleShowTxFees} />\n            </ModalCard.Body>\n          )}\n\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionModal;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Icon,\n  Modal,\n  Flex,\n  Box,\n  Button,\n  MetaMaskButton,\n  Link\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport TransactionFeeModal from \"./TransactionFeeModal\";\nimport GeneralUtil from \"../GeneralUtil\";\n\nclass TransactionConnectionModal extends React.Component {\n  state = {\n    showTxFees: false\n  };\n\n  toggleShowTxFees = e => {\n    console.log(\"showTxFees\", this.state.showTxFees);\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  };\n\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        {/* Start primary content */}\n        <Box mb={3}>\n          <Heading.h2>Connect to Rimble App Demo</Heading.h2>\n          <Text my={3}>\n            You need to connect your Ethereum account to use our\n            blockchain features.\n          </Text>\n        </Box>\n\n        <Flex\n          flexWrap={\"wrap\"}\n          justifyContent={\"space-between\"}\n          mx={-2}\n          mt={4}\n          mb={4}\n        >\n          <Box width={[1, 1, 1 / 3]} px={2} my={3}>\n            <Flex justifyContent={\"center\"}>\n              <Icon color=\"primary\" size=\"60\" name=\"Public\" />\n            </Flex>\n            <Heading.h5>The blockchain is public</Heading.h5>\n            <Text fontSize=\"1\">\n              Your account activity is public on the blockchain.\n              Choose an account you don’t mind being linked with your\n              activity here.\n            </Text>\n          </Box>\n          <Box width={[1, 1, 1 / 3]} px={2} my={3}>\n            <Flex justifyContent={\"center\"}>\n              <Icon\n                color=\"primary\"\n                size=\"60\"\n                name=\"AccountBalanceWallet\"\n              />\n            </Flex>\n            <Heading.h5>Have some Ether for fees</Heading.h5>\n            <Text fontSize=\"1\">\n              You’ll need Ether to pay transaction fees. Buy Ether\n              from exchanges like Coinbase.\n            </Text>\n            <Link\n              title=\"Learn about Ethereum transaction fees\"\n              as={\"a\"}\n              href=\"#\"\n              onClick={this.toggleShowTxFees}\n            >\n              What are transaction fees?\n            </Link>\n          </Box>\n          <Box width={[1, 1, 1 / 3]} px={2} my={3}>\n            <Flex justifyContent={\"center\"}>\n              <Icon color=\"primary\" size=\"60\" name=\"People\" />\n            </Flex>\n            <Heading.h5>Have the right account ready</Heading.h5>\n            <Text fontSize=\"1\">\n              If you have multiple Ethereum accounts, check that the\n              one you want to use is active in your browser.\n            </Text>\n          </Box>\n        </Flex>\n        {/* End Modal Content */}\n      </React.Fragment>\n    );\n  }\n\n  renderConnectButton = () => {\n    if (GeneralUtil.hasMetaMask()) {\n      return (\n        <MetaMaskButton\n          onClick={this.props.validateAccount}\n          width={[1, 1/2]}\n          mb={[5, 0]}\n        >\n          Connect with MetaMask\n        </MetaMaskButton>\n      )\n    } else {\n      return (\n        <Button\n          onClick={this.props.validateAccount}\n          width={[1, 'auto']}\n        >\n          Connect\n        </Button>\n      )\n    }\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n\n          {this.state.showTxFees === false ? (\n            <React.Fragment>\n              <ModalCard.Body>\n                {this.renderContent()}\n              </ModalCard.Body>\n              <ModalCard.Footer>\n                {this.renderConnectButton()}\n              </ModalCard.Footer>\n            </React.Fragment>\n          ) : (\n            <ModalCard.Body>\n              <TransactionFeeModal />\n              <ModalCard.BackButton onClick={this.toggleShowTxFees} />\n            </ModalCard.Body>\n          )}\n\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default TransactionConnectionModal;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Modal,\n  Flex,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\n\nclass ConnectionPendingModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>Connect Ethereum account</Heading.h2>\n\n        <Text my={4}>\n          Confirm the request that's just appeared. If you can't see a\n          request, open your{\" \"}\n          {GeneralUtil.hasMetaMask()\n            ? `MetaMask extension`\n            : `dApp browser settings`}\n          .\n        </Text>\n\n        <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n          <Flex alignItems={\"center\"}>\n            <Box position={\"relative\"} width={\"4em\"}>\n              <Box>\n                <Loader size={\"3em\"} />\n              </Box>\n            </Box>\n            <Box>\n              <Text fontWeight={4}>\n                Waiting for connection confirmation...\n              </Text>\n              <Text fontWeight={2}>This won’t cost you any Ether</Text>\n            </Box>\n          </Flex>\n        </Box>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionPendingModal;\n","import React from \"react\";\nimport { Heading, Text, Flex, Button, Modal } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nclass UserRejectedConnectionModal extends React.Component {\n  sendMessageAgain = event => {\n    this.props.closeModal();\n    this.props.initAccount();\n  };\n\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>\n          You can't continue without connecting your account\n        </Heading.h2>\n\n        <Text my={4}>\n          To use our blockchain features you need to confirm the connection\n          request.\n        </Text>\n\n        <Flex flexDirection={['column', 'row']} justifyContent={\"flex-end\"} mt={4}>\n          <Button.Outline onClick={this.props.closeModal} mr={[0, 3]} mb={[3, 0]}>\n            Cancel connection\n          </Button.Outline>\n          <Button onClick={this.sendMessageAgain}>\n            Try again\n          </Button>\n        </Flex>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default UserRejectedConnectionModal;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Modal,\n  Flex,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\n\nclass ValidationPendingModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>Verify Ethereum account</Heading.h2>\n\n        <Text my={4}>\n          Sign the message that's just appeared and we'll connect you. This\n          shows us you have access to this account. If you can't see a\n          message, open your{\" \"}\n          {GeneralUtil.hasMetaMask()\n            ? `MetaMask extension`\n            : `dApp browser settings`}\n          .\n        </Text>\n\n        <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n          <Flex alignItems={\"center\"}>\n            <Box position={\"relative\"} width={\"4em\"}>\n              <Box>\n                <Loader size={\"3em\"} />\n              </Box>\n            </Box>\n            <Box>\n              <Text fontWeight={4}>Waiting for you to sign...</Text>\n              <Text fontWeight={2}>This won’t cost you any Ether</Text>\n            </Box>\n          </Flex>\n        </Box>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ValidationPendingModal;\n","import React from \"react\";\nimport { Heading, Text, Flex, Button, Modal } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nclass UserRejectedValidationModal extends React.Component {\n  sendMessageAgain = event => {\n    this.props.closeModal();\n    this.props.validateAccount();\n  };\n\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>\n          You can't continue without signing the message\n        </Heading.h2>\n\n        <Text my={4}>\n          To use our blockchain features, sign the message to finish\n          connecting.\n        </Text>\n\n        <Flex flexDirection={['column', 'row']} justifyContent={'flex-end'} mt={4}>\n          <Button.Outline onClick={this.props.closeModal} mr={[0, 3]} mb={[3, 0]}>\n            Cancel connection\n          </Button.Outline>\n          <Button onClick={this.sendMessageAgain}>\n            Try again\n          </Button>\n        </Flex>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default UserRejectedValidationModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Modal,\n  Flex,\n  Box,\n  Button,\n  PublicAddress,\n  QR,\n  Link\n} from \"rimble-ui\";\nimport TransactionFeeModal from \"./TransactionFeeModal\";\n\nclass LowFundsModal extends React.Component {\n  state = {\n    showSecondary: false,\n    showTxFees: false\n  };\n\n  toggleQRVisible = () => {\n    this.setState({\n      showSecondary: !this.state.showSecondary\n    });\n  };\n\n  toggleShowTxFees = e => {\n    console.log(\"showTxFees\", this.state.showTxFees);\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  };\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card\n          pr={[0, 5]}\n          pl={[0, 5]}\n          pt={[\"48px\", 5]}\n          pb={[\"97px\", 4]}\n          maxWidth={\"960px\"}\n          overflow={\"hidden\"}\n          position={\"relative\"}\n        >\n          <Box position={\"relative\"}>\n            <Flex\n              justifyContent={\"flex-end\"}\n              mr={[0, -5]}\n              mt={[\"-48px\", -5]}\n              position={\"absolute\"}\n              top={\"0\"}\n              left={\"0\"}\n              right={\"0\"}\n              bg={\"white\"}\n              zIndex={\"1\"}\n            >\n              <Button.Text\n                icononly\n                icon={\"Close\"}\n                color={\"moon-gray\"}\n                onClick={this.props.closeModal}\n              />\n            </Flex>\n          </Box>\n\n          {this.state.showSecondary === false &&\n          this.state.showTxFees === false ? (\n            <Box>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start primary content */}\n\n                  <Box alignContent=\"center\" py={3}>\n                    <Heading.h2>\n                      Not enough Ether for transaction fees\n                    </Heading.h2>\n                  </Box>\n                  <Text mb={4}>\n                    This is a blockchain action so you’ll have to pay a\n                    transaction fee. A few dollars worth of Ether should be\n                    enough but fees do change based on how busy the network is.{\" \"}\n                    <strong>Fund your account and try again.</strong>{\" \"}\n                    <Link\n                      title=\"Learn about Ethereum transaction fees\"\n                      as={\"a\"}\n                      href=\"#\"\n                      onClick={this.toggleShowTxFees}\n                    >\n                      What are transaction fees?\n                    </Link>\n                  </Text>\n\n                  <Heading.h3>How to add funds</Heading.h3>\n\n                  <Flex\n                    alignItems={\"stretch\"}\n                    mx={0}\n                    mb={[4, 5]}\n                    flexWrap={[\"wrap\", \"no-wrap\"]}\n                  >\n                    <Box p={2} width={[1, 1 / 2]}>\n                      <Card height={\"100%\"}>\n                        <Flex\n                          flexDirection={\"column\"}\n                          justifyContent={\"space-between\"}\n                          height={\"100%\"}\n                        >\n                          <Box>\n                            <Heading.h5>Buy ETH from an exchange</Heading.h5>\n                            <Text fontSize=\"1\">\n                              You can buy ETH from exchanges like Coinbase and\n                              send it to your account. If you don’t already have\n                              a Coinbase account, it can take a while to get set\n                              up.\n                            </Text>\n                          </Box>\n\n                          <Button.Outline my={3}>\n                            <Flex alignItems={\"center\"}>\n                              <Icon name=\"OpenInNew\" mr={2} />\n                              Go to CoinBase\n                            </Flex>\n                          </Button.Outline>\n                        </Flex>\n                      </Card>\n                    </Box>\n                    <Box p={2} width={[1, 1 / 2]}>\n                      <Card height={\"100%\"}>\n                        <Flex\n                          flexDirection={\"column\"}\n                          justifyContent={\"space-between\"}\n                          height={\"100%\"}\n                        >\n                          <Box>\n                            <Heading.h5>\n                              Send ETH from another account\n                            </Heading.h5>\n                            <Text fontSize=\"1\">\n                              If you have ETH in another Ethereum account, you\n                              can send it to this account using your public\n                              Ethereum address or QR code.\n                            </Text>\n                          </Box>\n                          <Button.Outline my={3} onClick={this.toggleQRVisible}>\n                            <Flex alignItems={\"center\"}>\n                              <Icon name=\"FilterCenterFocus\" mr={2} />\n                              Show account QR code\n                            </Flex>\n                          </Button.Outline>\n                        </Flex>\n                      </Card>\n                    </Box>\n                  </Flex>\n                  {/* End primary content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex borderTop={1} borderColor={\"#999\"} />\n                <Flex pt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button onClick={this.props.closeModal} width={[1, \"auto\"]}>\n                    Back to Rimble App Demo\n                  </Button>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showSecondary ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start secondary content */}\n                  <Flex my={3} justifyContent={\"center\"}>\n                    <QR\n                      size=\"130\"\n                      value={\n                        this.props.account ? this.props.account : \"1234512345\"\n                      }\n                    />\n                  </Flex>\n\n                  <PublicAddress my={4} address={this.props.account} />\n                  <Flex mb={3} />\n                  {/* End secondary content */}\n                </Box>\n              </Box>\n\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start secondary footer */}\n                <Flex borderTop={1} borderColor={\"#999\"} />\n                <Flex mt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleQRVisible}\n                  >\n                    Go back\n                  </Button.Outline>\n                </Flex>\n                {/* End secondary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showTxFees ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start tx fee content */}\n                  <TransactionFeeModal />\n                  {/* End tx fee content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex\n                  pt={4}\n                  justifyContent={[\"center\", \"flex-end\"]}\n                  borderTop={1}\n                  borderColor={\"#999\"}\n                >\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleShowTxFees}\n                  >\n                    Go Back\n                  </Button.Outline>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default LowFundsModal;\n","import React from \"react\";\n\nimport NoWeb3BrowserModal from \"./components/NoWeb3BrowserModal\";\nimport NoWalletModal from \"./components/NoWalletModal\";\nimport WrongNetworkModal from \"./components/WrongNetworkModal\";\n\nimport ConnectionModal from \"./components/ConnectionModal\";\nimport TransactionConnectionModal from \"./components/TransactionConnectionModal\";\nimport ConnectionPendingModal from \"./components/ConnectionPendingModal\";\nimport UserRejectedConnectionModal from \"./components/UserRejectedConnectionModal\";\n\nimport ValidationPendingModal from \"./components/ValidationPendingModal\";\nimport UserRejectedValidationModal from \"./components/UserRejectedValidationModal\";\n\nimport LowFundsModal from \"./components/LowFundsModal\";\n\nclass ConnectionModalUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        <NoWeb3BrowserModal\n          closeModal={this.props.modals.methods.closeNoWeb3BrowserModal}\n          isOpen={this.props.modals.data.noWeb3BrowserModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <NoWalletModal\n          closeModal={this.props.modals.methods.closeNoWalletModal}\n          isOpen={this.props.modals.data.noWalletModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <WrongNetworkModal\n          closeModal={this.props.modals.methods.closeWrongNetworkModal}\n          isOpen={this.props.modals.data.wrongNetworkModalIsOpen}\n          network={this.props.network}\n        />\n\n        <ConnectionModal\n          closeModal={this.props.modals.methods.closeConnectionModal}\n          validateAccount={this.props.validateAccount}\n          isOpen={\n            this.props.modals.data.connectionModalIsOpen &&\n            !this.props.accountValidated\n          }\n          currentNetwork={this.props.network.current}\n        />\n\n        <TransactionConnectionModal\n          closeModal={this.props.modals.methods.closeTransactionConnectionModal}\n          validateAccount={this.props.validateAccount}\n          isOpen={this.props.modals.data.transactionConnectionModalIsOpen}\n          currentNetwork={this.props.network.current}\n        />\n\n        <ConnectionPendingModal\n          closeModal={this.props.modals.methods.closeConnectionPendingModal}\n          isOpen={this.props.modals.data.accountConnectionPending}\n          currentNetwork={this.props.network.current}\n        />\n        <UserRejectedConnectionModal\n          closeModal={\n            this.props.modals.methods.closeUserRejectedConnectionModal\n          }\n          isOpen={this.props.modals.data.userRejectedConnect}\n          initAccount={this.props.initAccount}\n        />\n\n        <ValidationPendingModal\n          closeModal={this.props.modals.methods.closeValidationPendingModal}\n          isOpen={this.props.modals.data.accountValidationPending}\n          currentNetwork={this.props.network.current}\n          account={this.props.account}\n        />\n        <UserRejectedValidationModal\n          closeModal={\n            this.props.modals.methods.closeUserRejectedValidationModal\n          }\n          isOpen={this.props.modals.data.userRejectedValidation}\n          validateAccount={this.props.validateAccount}\n        />\n\n        <LowFundsModal\n          closeModal={this.props.modals.methods.closeLowFundsModal}\n          isOpen={this.props.modals.data.lowFundsModalIsOpen}\n          currentNetwork={this.props.network.current}\n          account={this.props.account}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ConnectionModalUtil;\n","import React from \"react\";\n\nclass TransactionUtil extends React.Component {\n  render() {\n    return (\n      <div>\n      </div>\n    );\n  }\n}\n\nexport default TransactionUtil;\n","import React from \"react\";\nimport Web3 from \"web3\"; // uses latest 1.x.x version\nimport RimbleUtils from \"@rimble/utils\";\nimport ConnectionModalUtil from \"./ConnectionModalsUtil\";\nimport TransactionUtil from \"./TransactionUtil\";\n\nconst RimbleTransactionContext = React.createContext({\n  contract: {},\n  account: {},\n  accountBalance: {},\n  accountBalanceLow: {},\n  web3: {},\n  web3Fallback: {},\n  transactions: {},\n  checkPreflight: () => {},\n  initWeb3: () => {},\n  initContract: () => {},\n  initAccount: () => {},\n  rejectAccountConnect: () => {},\n  accountValidated: {},\n  accountValidationPending: {},\n  rejectValidation: () => {},\n  validateAccount: () => {},\n  connectAndValidateAccount: () => {},\n  network: {\n    required: {},\n    current: {},\n    isCorrectNetwork: null,\n    checkNetwork: () => {}\n  },\n  modals: {\n    data: {\n      noWeb3BrowserModalIsOpen: {},\n      noWalletModalIsOpen: {},\n      connectionModalIsOpen: {},\n      accountConnectionPending: {},\n      userRejectedConnect: {},\n      accountValidationPending: {},\n      userRejectedValidation: {},\n      wrongNetworkModalIsOpen: {},\n      transactionConnectionModalIsOpen: {},\n      lowFundsModalIsOpen: {}\n    },\n    methods: {\n      openNoWeb3BrowserModal: () => {},\n      closeNoWeb3BrowserModal: () => {},\n      closeConnectionPendingModal: () => {},\n      openConnectionPendingModal: () => {},\n      closeUserRejectedConnectionModal: () => {},\n      openUserRejectedConnectionModal: () => {},\n      closeValidationPendingModal: () => {},\n      openValidationPendingModal: () => {},\n      closeUserRejectedValidationModal: () => {},\n      openUserRejectedValidationModal: () => {},\n      closeWrongNetworkModal: () => {},\n      openWrongNetworkModal: () => {},\n      closeTransactionConnectionModal: () => {},\n      openTransactionConnectionModal: () => {},\n      closeLowFundsModal: () => {},\n      openLowFundsModal: () => {}\n    }\n  },\n  transaction: {\n    data: {\n      transactions: {}\n    },\n    meta: {},\n    methods: {}\n  }\n});\n\nclass RimbleTransaction extends React.Component {\n  static Consumer = RimbleTransactionContext.Consumer;\n\n  web3Preflight = () => {\n    // Is this browser compatible?\n    if (!this.state.validBrowser) {\n      console.log(\"Invalid browser, cancelling transaction.\");\n      let modals = { ...this.state.modals };\n      modals.data.noWeb3BrowserModalIsOpen = true;\n      this.setState({ modals });\n    }\n\n    // Is there a web3 provider?\n    if (!this.state.web3) {\n      console.log(\"No browser wallet, cancelling transaction.\");\n      let modals = { ...this.state.modals };\n      modals.data.noWalletModalIsOpen = true;\n      this.setState({ modals });\n      return false;\n    }\n\n    return true;\n  };\n\n  web3ActionPreflight = () => {\n    // Is this browser compatible?\n    if (!this.state.validBrowser) {\n      console.log(\"Invalid browser, cancelling transaction.\");\n      let modals = { ...this.state.modals };\n      modals.data.noWeb3BrowserModalIsOpen = true;\n      this.setState({ modals });\n      return false;\n    }\n\n    // Is there a wallet?\n    if (this.state.web3Fallback) {\n      console.log(\"No browser wallet, cancelling transaction.\");\n      let modals = { ...this.state.modals };\n      modals.data.noWalletModalIsOpen = true;\n      this.setState({ modals });\n      return false;\n    }\n\n    // Is it on the correct network?\n    if (!this.state.network.isCorrectNetwork) {\n      // wrong network modal\n      this.state.modals.methods.openWrongNetworkModal();\n      return false;\n    }\n\n    return true;\n  };\n\n  // Validates user's browser is web3 capable\n  checkModernBrowser = async () => {\n    const validBrowser = RimbleUtils.browserIsWeb3Capable();\n\n    this.setState({\n      validBrowser\n    });\n\n    return validBrowser;\n  };\n\n  // Initialize a web3 provider\n  // TODO: Make async work\n  initWeb3 = async () => {\n    this.checkModernBrowser();\n\n    let web3 = {};\n\n    // Check for modern web3 provider\n    if (window.ethereum) {\n      console.log(\"Using modern web3 provider.\");\n      web3 = new Web3(window.ethereum);\n    }\n    // Legacy dapp browsers, public wallet address always exposed\n    else if (window.web3) {\n      console.log(\"Legacy web3 provider. Try updating.\");\n      web3 = new Web3(window.web3.currentProvider);\n    }\n    // Non-dapp browsers...\n    else {\n      console.log(\"Non-Ethereum browser detected. Using Infura fallback.\");\n\n      const web3Provider = new Web3.providers.HttpProvider(\n        \"https://rinkeby.infura.io/v3/c43d74f41ea4482d8eecfa96d47a8151\"\n      );\n      web3 = new Web3(web3Provider);\n\n      // Set fallback property, used to show modal\n      this.setState({ web3Fallback: true });\n    }\n\n    this.setState({ web3 }, () => {\n      // After setting the web3 provider, check network\n      this.checkNetwork();\n    });\n\n    console.log(\"Finished initWeb3\");\n  };\n\n  initContract = async (address, abi) => {\n    console.log(\"Init contract\");\n\n    if (!this.state.web3) {\n      console.log(\"Awaiting web3\");\n      await this.initWeb3();\n    }\n\n    this.createContract(address, abi);\n  };\n\n  createContract = async (address, abi) => {\n    console.log(\"creating contract\", address, abi);\n    // Create contract on initialized web3 provider with given abi and address\n    try {\n      const contract = new this.state.web3.eth.Contract(abi, address);\n      this.setState({ contract });\n    } catch (error) {\n      console.log(\"Could not create contract.\");\n      window.toastProvider.addMessage(\"Contract creation failed.\", {\n        variant: \"failure\"\n      });\n    }\n  };\n\n  initAccount = async () => {\n    this.openConnectionPendingModal();\n\n    // First try EIP 1102 Connect method\n    if (window.ethereum) {\n      try {\n        // Request account access if needed\n        await window.ethereum.enable().then(wallets => {\n          const account = wallets[0];\n          this.closeConnectionPendingModal();\n          this.setState({ account });\n\n          console.log(\"wallet address:\", this.state.account);\n\n          // After account is complete, get the balance\n          this.getAccountBalance(account);\n\n          // Watch for account change\n          this.pollAccountUpdates();\n        });\n      } catch (error) {\n        // User denied account access...\n        console.log(\"User cancelled connect request. Error:\", error);\n\n        // Reject Connect\n        this.rejectAccountConnect(error);\n      }\n    } else {\n      // Revert back to directly getting wallet address\n      try {\n        const account = window.web3.eth.accounts[0];\n        this.closeConnectionPendingModal();\n        this.setState({ account });\n\n        console.log(\"fallback wallet address:\", this.state.account);\n\n        // After account is complete, get the balance\n        this.getAccountBalance(account);\n\n        // Watch for account change\n        // TODO: This type of wallet browser probably doesn't inject window.ethereum\n        // this.pollAccountUpdates();\n      } catch (error) {\n        console.log(\"Could not get account address. Error: \", error);\n\n        // Reject Connect\n        // TODO: This needs a new modal\n        this.rejectAccountConnect(error);\n      }\n    }\n  };\n\n  // TODO: Can this be moved/combined?\n  rejectAccountConnect = error => {\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  };\n\n  getAccountBalance = async account => {\n    const localAccount = account ? account : this.state.account;\n    if (localAccount) {\n      try {\n        await this.state.web3.eth\n          .getBalance(localAccount)\n          .then(accountBalance => {\n            if (!isNaN(accountBalance)) {\n              accountBalance = this.state.web3.utils.fromWei(\n                accountBalance,\n                \"ether\"\n              );\n              accountBalance = parseFloat(accountBalance);\n\n              // Only update if changed\n              if (accountBalance !== this.state.accountBalance) {\n                this.setState({ accountBalance });\n                console.log(\"account balance: \", accountBalance);\n                this.determineAccountLowBalance();\n              }\n            } else {\n              this.setState({ accountBalance: \"--\" });\n              console.log(\"account balance FAILED\", accountBalance);\n            }\n          });\n      } catch (error) {\n        console.log(\"Failed to get account balance.\" + error);\n      }\n    } else {\n      console.log(\"No account on which to get balance\");\n      return false;\n    }\n  };\n\n  determineAccountLowBalance = () => {\n    // If provided a minimum from http://192.168.1.103:3000/ then use it, else default to 1\n    const accountBalanceMinimum =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.accountBalanceMinimum !== \"undefined\"\n        ? this.props.config.accountBalanceMinimum\n        : 1;\n    // Determine if the account balance is low\n    const accountBalanceLow =\n      this.state.accountBalance < accountBalanceMinimum ? true : false;\n\n    this.setState({\n      accountBalanceLow\n    });\n\n    if (\n      accountBalanceLow === false &&\n      this.state.modals.data.lowFundsModalIsOpen\n    ) {\n      this.closeLowFundsModal();\n\n      window.toastProvider.addMessage(\"Received Funds!\", {\n        variant: \"success\",\n        secondaryMessage: \"You now have enough ETH\"\n      });\n    }\n  };\n\n  validateAccount = async () => {\n    console.log(\"validateAccount\");\n    // Get account wallet if none exist\n    if (!this.state.account) {\n      await this.initAccount();\n\n      if (!this.state.account) {\n        return;\n      }\n    }\n    console.log(\"setting state to update UI\");\n\n    // Show blocking modal\n    this.openValidationPendingModal();\n\n    console.log(\"Requesting web3 personal sign\");\n    return window.web3.personal.sign(\n      window.web3.fromUtf8(\n        `Hi there from Rimble! To connect, sign this message to prove you have access to this account. This won’t cost you any Ether.\n \n        Message ID: 48d4f84f-f402-4268-8af4-a692fabff5da (this is for security, you don’t need to remember this)`\n      ),\n      this.state.account,\n      (error, signature) => {\n        if (error) {\n          // User rejected account validation.\n          console.log(\"Wallet account not validated. Error:\", error);\n\n          // Reject the validation\n          this.rejectValidation(error);\n\n          if (this.state.callback) {\n            this.state.callback(\"error\");\n          }\n        } else {\n          const successMessage = \"Connected!\";\n          console.log(successMessage, signature);\n          window.toastProvider.addMessage(successMessage, {\n            variant: \"success\",\n            secondaryMessage: \"Welcome to the Rimble Demo App 🎉\"\n          });\n\n          this.closeValidationPendingModal();\n          this.setState({\n            accountValidated: true\n          });\n\n          if (this.state.callback) {\n            this.state.callback(\"success\");\n          }\n        }\n      }\n    );\n  };\n\n  rejectValidation = error => {\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedValidation = true;\n    modals.data.accountValidated = false;\n    modals.data.accountValidationPending = false;\n    this.setState({ modals });\n  };\n\n  connectAndValidateAccount = async callback => {\n    if (!this.web3ActionPreflight()) {\n      return;\n    }\n\n    // Check for account\n    if (!this.state.account || !this.state.accountValidated) {\n      // Show modal to connect account\n      this.openConnectionModal(null, callback);\n    }\n\n    // await this.initAccount();\n    // await this.validateAccount();\n  };\n\n  getRequiredNetwork = () => {\n    const networkId =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.requiredNetwork !== \"undefined\"\n        ? this.props.config.requiredNetwork\n        : 1;\n    let networkName = \"\";\n    switch (networkId) {\n      case 1:\n        networkName = \"Main\";\n        break;\n      case 3:\n        networkName = \"Ropsten\";\n        break;\n      case 4:\n        networkName = \"Rinkeby\";\n        break;\n      case 42:\n        networkName = \"Kovan\";\n        break;\n      default:\n        networkName = \"unknown\";\n    }\n\n    let requiredNetwork = {\n      name: networkName,\n      id: networkId\n    };\n\n    let network = { ...this.state.network };\n    network.required = requiredNetwork;\n\n    this.setState({ network });\n  };\n\n  getNetworkId = async () => {\n    try {\n      return this.state.web3.eth.net.getId((error, networkId) => {\n        let current = { ...this.state.network.current };\n        current.id = networkId;\n        let network = { ...this.state.network };\n        network.current = current;\n        this.setState({ network });\n      });\n    } catch (error) {\n      console.log(\"Could not get network ID: \", error);\n    }\n  };\n\n  getNetworkName = async () => {\n    try {\n      return this.state.web3.eth.net.getNetworkType((error, networkName) => {\n        let current = { ...this.state.network.current };\n        current.name = networkName;\n        let network = { ...this.state.network };\n        network.current = current;\n        this.setState({ network });\n      });\n    } catch (error) {\n      console.log(\"Could not get network Name: \", error);\n    }\n  };\n\n  checkNetwork = async () => {\n    this.getRequiredNetwork();\n    await this.getNetworkId();\n    await this.getNetworkName();\n\n    let network = { ...this.state.network };\n    network.isCorrectNetwork =\n      this.state.network.current.id === this.state.network.required.id\n        ? true\n        : false;\n\n    this.setState({ network });\n  };\n\n  pollAccountUpdates = () => {\n    let account = this.state.account;\n    let requiresUpdate = false;\n    let accountInterval = setInterval(() => {\n      if (\n        this.state.modals.data.accountValidationPending ||\n        this.state.modals.data.accountConnectionPending\n      ) {\n        return;\n      }\n      if (window.ethereum.isConnected()) {\n        const updatedAccount = window.web3.eth.accounts[0];\n\n        if (updatedAccount.toLowerCase() !== account.toLowerCase()) {\n          requiresUpdate = true;\n        }\n\n        this.getAccountBalance();\n\n        if (requiresUpdate) {\n          clearInterval(accountInterval);\n          let modals = { ...this.state.modals };\n          modals.data.userRejectedConnect = null;\n\n          this.setState(\n            {\n              modals: modals,\n              account: \"\",\n              accountValidated: null,\n              transactions: []\n            },\n            () => {\n              this.initAccount();\n            }\n          );\n        }\n      }\n    }, 1000);\n  };\n\n  contractMethodSendWrapper = (contractMethod, callback) => {\n    console.log(\"contractMethodSendWrapper Callback: \", callback);\n    // Is it web3 capable?\n    if (!this.web3ActionPreflight()) {\n      return;\n    }\n\n    // Is a wallet connected and verified?\n    if (!this.state.account || !this.state.accountValidated) {\n      this.openTransactionConnectionModal(null, () => {\n        console.log(\"Successfully connected, continuing with Tx\");\n        this.contractMethodSendWrapper(contractMethod, callback);\n      });\n      return;\n    }\n\n    // Are there a minimum amount of funds?\n    if (this.state.accountBalanceLow) {\n      this.openLowFundsModal(null, () => {});\n      return;\n    }\n\n    // Is the contract loaded?\n\n    // Create new tx and add to collection\n    // Maybe this needs to get moved out of the wrapper?\n    let transaction = this.createTransaction();\n    this.addTransaction(transaction);\n\n    // Add meta data to transaction\n    transaction.method = contractMethod;\n    transaction.type = \"contract\";\n    transaction.status = \"started\";\n\n    console.log(\"transaction: \", { ...transaction });\n\n    // Show toast for starting transaction\n    this.updateTransaction(transaction);\n\n    const { contract, account } = this.state;\n\n    try {\n      contract.methods[contractMethod]()\n        .send({ from: account })\n        .on(\"transactionHash\", hash => {\n          // Submitted to block and received transaction hash\n          // Set properties on the current transaction\n          transaction.transactionHash = hash;\n          transaction.status = \"pending\";\n          transaction.recentEvent = \"transactionHash\";\n          this.updateTransaction(transaction);\n          if (callback) {\n            callback(\"transactionHash\", transaction);\n          }\n        })\n        .on(\"confirmation\", (confirmationNumber, receipt) => {\n          // Update confirmation count on each subsequent confirmation that's received\n          transaction.confirmationCount += 1;\n\n          // How many confirmations should be received before informing the user\n          const confidenceThreshold = 3;\n\n          if (transaction.confirmationCount === 1) {\n            // Initial confirmation receipt\n            transaction.status = \"confirmed\";\n          } else if (transaction.confirmationCount < confidenceThreshold) {\n            // Not enough confirmations to match threshold\n          } else if (transaction.confirmationCount === confidenceThreshold) {\n            // Confirmations match threshold\n            // Check the status from result since we are confident in the result\n            if (receipt.status) {\n              transaction.status = \"success\";\n            } else if (!receipt.status) {\n              transaction.status = \"error\";\n            }\n          } else if (transaction.confirmationCount > confidenceThreshold) {\n            // Confidence threshold met\n          }\n          // Update transaction with receipt details\n          transaction.recentEvent = \"confirmation\";\n          this.updateTransaction(transaction);\n          if (callback) {\n            callback(\"confirmation\", transaction);\n          }\n        })\n        .on(\"receipt\", receipt => {\n          // Received receipt, met total number of confirmations\n          transaction.recentEvent = \"receipt\";\n          this.updateTransaction(transaction);\n          if (callback) {\n            callback(\"receipt\", transaction);\n          }\n        })\n        .on(\"error\", error => {\n          // Errored out\n          transaction.status = \"error\";\n          transaction.recentEvent = \"error\";\n          this.updateTransaction(transaction);\n          // TODO: should this be a custom error? What is the error here?\n          // TODO: determine how to handle error messages globally\n          window.toastProvider.addMessage(\"Value change failed\", {\n            secondaryMessage: \"Could not change value.\",\n            actionHref: \"\",\n            actionText: \"\",\n            variant: \"failure\"\n          });\n          if (callback) {\n            callback(\"error: \" + error, transaction);\n          }\n        });\n    } catch (error) {\n      transaction.status = \"error\";\n      this.updateTransaction(transaction);\n      // TODO: should this be a custom error? What is the error here?\n      // TODO: determine how to handle error messages globally\n      window.toastProvider.addMessage(\"Value change failed\", {\n        secondaryMessage: \"Could not change value on smart contract\",\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"failure\"\n      });\n      if (callback) {\n        callback(\"error: \" + error, error);\n      }\n    }\n  };\n\n  // Create tx\n  createTransaction = () => {\n    let transaction = {};\n    transaction.created = Date.now();\n    transaction.lastUpdated = Date.now();\n    transaction.status = \"initialized\";\n    transaction.confirmationCount = 0;\n\n    return transaction;\n  };\n\n  addTransaction = transaction => {\n    const transactions = { ...this.state.transactions };\n    console.log(\"addTransaction: \", { ...transaction });\n    transactions[`tx${transaction.created}`] = transaction;\n    this.setState({ transactions });\n  };\n\n  // Add/update transaction in state\n  updateTransaction = updatedTransaction => {\n    const transactions = { ...this.state.transactions };\n    const transaction = { ...updatedTransaction };\n    transaction.lastUpdated = Date.now();\n    transactions[`tx${updatedTransaction.created}`] = transaction;\n    this.setState({ transactions });\n  };\n\n  // UTILITY\n  shortenHash = hash => {\n    let shortHash = hash;\n    const txStart = shortHash.substr(0, 7);\n    const txEnd = shortHash.substr(shortHash.length - 4);\n    shortHash = txStart + \"...\" + txEnd;\n    return shortHash;\n  };\n\n  // CONNECTION MODAL METHODS\n  closeConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = false;\n    console.log(\"this.state\", this.state);\n    this.setState({ modals });\n  };\n\n  openConnectionModal = (e, callback) => {\n    if (typeof e !== \"undefined\" && e !== null) {\n      console.log(e);\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = true;\n    this.setState({ modals: modals, callback: callback });\n  };\n\n  closeConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    this.setState({ modals });\n  };\n\n  openConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = true;\n    modals.data.transactionConnectionModalIsOpen = false;\n    modals.data.connectionModalIsOpen = false;\n\n    this.setState({ modals });\n  };\n\n  closeUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = false;\n    this.setState({ modals });\n  };\n\n  openUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  };\n\n  closeValidationPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountValidationPending = false;\n    modals.data.connectionModalIsOpen = false;\n    modals.data.transactionConnectionModalIsOpen = false;\n    this.setState({ modals });\n  };\n\n  openValidationPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    modals.data.transactionConnectionModalIsOpen = false;\n    modals.data.accountValidationPending = true;\n    modals.data.userRejectedValidation = false;\n    this.setState({ modals });\n  };\n\n  closeUserRejectedValidationModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedValidation = false;\n    modals.data.connectionModalIsOpen = false;\n    modals.data.transactionConnectionModalIsOpen = false;\n    this.setState({ modals });\n  };\n\n  openUserRejectedValidationModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedValidation = true;\n    modals.data.connectionModalIsOpen = false;\n    modals.data.transactionConnectionModalIsOpen = false;\n    this.setState({ modals });\n  };\n\n  closeNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = false;\n    this.setState({ modals });\n  };\n\n  openNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = true;\n    this.setState({ modals });\n  };\n\n  closeNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = false;\n    this.setState({ modals });\n  };\n\n  openNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = true;\n    this.setState({ modals });\n  };\n\n  closeNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = false;\n    this.setState({ modals });\n  };\n\n  openNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = true;\n    this.setState({ modals });\n  };\n\n  closeWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = false;\n    this.setState({ modals });\n  };\n\n  openWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = true;\n    this.setState({ modals });\n  };\n\n  closeTransactionConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionConnectionModalIsOpen = false;\n    this.setState({ modals });\n  };\n\n  openTransactionConnectionModal = (e, callback) => {\n    if (typeof e !== \"undefined\" && e !== null) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionConnectionModalIsOpen = true;\n    this.setState({ modals, callback: callback });\n  };\n\n  closeLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = false;\n    this.setState({ modals });\n  };\n\n  openLowFundsModal = (e, callback) => {\n    if (typeof e !== \"undefined\" && e !== null) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = true;\n    this.setState({ modals, callback: callback });\n  };\n\n  state = {\n    contract: {},\n    account: null,\n    accountBalance: null,\n    accountBalanceLow: null,\n    web3: null,\n    web3Fallback: null,\n    transactions: {},\n    checkPreflight: this.checkPreflight,\n    initWeb3: this.initWeb3,\n    initContract: this.initContract,\n    initAccount: this.initAccount,\n    contractMethodSendWrapper: this.contractMethodSendWrapper,\n    rejectAccountConnect: this.rejectAccountConnect,\n    accountValidated: null,\n    accountValidationPending: null,\n    rejectValidation: this.rejectValidation,\n    validateAccount: this.validateAccount,\n    connectAndValidateAccount: this.connectAndValidateAccount,\n    network: {\n      required: {},\n      current: {},\n      isCorrectNetwork: null,\n      checkNetwork: this.checkNetwork\n    },\n    modals: {\n      data: {\n        noWeb3BrowserModalIsOpen: this.noWeb3BrowserModalIsOpen,\n        noWalletModalIsOpen: this.noWalletModalIsOpen,\n        connectionModalIsOpen: null,\n        accountConnectionPending: null,\n        userRejectedConnect: null,\n        accountValidationPending: null,\n        userRejectedValidation: null,\n        wrongNetworkModalIsOpen: null,\n        transactionConnectionModalIsOpen: null,\n        lowFundsModalIsOpen: null\n      },\n      methods: {\n        openNoWeb3BrowserModal: this.openNoWeb3BrowserModal,\n        closeNoWeb3BrowserModal: this.closeNoWeb3BrowserModal,\n        openNoWalletModal: this.openNoWalletModal,\n        closeNoWalletModal: this.closeNoWalletModal,\n        closeConnectionModal: this.closeConnectionModal,\n        openConnectionModal: this.openConnectionModal,\n        closeConnectionPendingModal: this.closeConnectionPendingModal,\n        openConnectionPendingModal: this.openConnectionPendingModal,\n        closeUserRejectedConnectionModal: this.closeUserRejectedConnectionModal,\n        openUserRejectedConnectionModal: this.openUserRejectedConnectionModal,\n        closeValidationPendingModal: this.closeValidationPendingModal,\n        openValidationPendingModal: this.openValidationPendingModal,\n        closeUserRejectedValidationModal: this.closeUserRejectedValidationModal,\n        openUserRejectedValidationModal: this.openUserRejectedValidationModal,\n        closeWrongNetworkModal: this.closeWrongNetworkModal,\n        openWrongNetworkModal: this.openWrongNetworkModal,\n        closeTransactionConnectionModal: this.closeTransactionConnectionModal,\n        openTransactionConnectionModal: this.openTransactionConnectionModal,\n        closeLowFundsModal: this.closeLowFundsModal,\n        openLowFundsModal: this.openLowFundsModal\n      }\n    },\n    transaction: {\n      data: {\n        transactions: null\n      },\n      meta: {},\n      methods: {}\n    }\n  };\n\n  componentDidMount() {\n    // Performs a check on browser and will load a web3 provider\n    // this.initWeb3();\n  }\n\n  render() {\n    return (\n      <div>\n        <RimbleTransactionContext.Provider value={this.state} {...this.props} />\n        <ConnectionModalUtil\n          initAccount={this.state.initAccount}\n          account={this.state.account}\n          validateAccount={this.state.validateAccount}\n          accountConnectionPending={this.state.accountConnectionPending}\n          accountValidationPending={this.state.accountValidationPending}\n          accountValidated={this.state.accountValidated}\n          network={this.state.network}\n          modals={this.state.modals}\n        />\n        <TransactionUtil transaction={this.state.transaction} />\n      </div>\n    );\n  }\n}\n\nexport default RimbleTransaction;\n","import React from \"react\";\nimport { Box, Heading } from \"rimble-ui\";\n\nclass Header extends React.Component {\n  render() {\n    return (\n      <Box bg=\"primary\" p={3} justifyContent=\"center\" flexDirection=\"column\">\n        <Box maxWidth=\"400px\" mx=\"auto\">\n          <Heading fontSize={4} color={\"white\"}>Rimble App Demo</Heading>\n        </Box>\n      </Box>\n    );\n  }\n}\n\nexport default Header;\n","import React from \"react\";\nimport { Flex, Box, Text, Blockie, QR } from \"rimble-ui\";\nimport ShortHash from \"./ShortHash\";\n\nclass AccountOverview extends React.Component {\n  trimEth = eth => {\n    eth = parseFloat(eth);\n    eth = eth * 10000;\n    eth = Math.round(eth);\n    eth = eth / 10000;\n    eth = eth.toFixed(4);\n\n    return eth;\n  };\n\n  render() {\n    const roundedBalance = this.trimEth(this.props.accountBalance);\n    return (\n      <Flex alignItems={\"flex-start\"}>\n        <Flex mr={3}>\n          <Flex border={1} borderColor={'moon-gray'} p={1}>\n            <QR\n              value={this.props.account}\n              size={'4rem'}\n              renderAs={'svg'}\n            />\n          </Flex>\n        </Flex>\n        <Box>\n          <Text.span fontSize={1} color={'mid-gray'}>\n            Public Address:\n            <div style={{'word-break': 'break-word'}}>\n              {this.props.account}\n            </div>\n          </Text.span>\n          <Text\n            fontSize={1}\n            color={this.props.accountBalanceLow ? 'red' : 'mid-gray'}\n            >\n              Balance: {roundedBalance} ETH\n          </Text>\n        </Box>\n      </Flex>\n    );\n  }\n}\n\nexport default AccountOverview;\n","import React from \"react\";\nimport { Text } from \"rimble-ui\";\n\nclass ShortHash extends React.Component {\n  shortenHash = hash => {\n    let shortHash = hash;\n    const txStart = shortHash.substr(0, 7);\n    const txEnd = shortHash.substr(shortHash.length - 4);\n    shortHash = txStart + \"...\" + txEnd;\n    return shortHash;\n  };\n  render() {\n    const shortHash = this.shortenHash(this.props.hash);\n\n    return <Text.span>{shortHash}</Text.span>;\n  }\n}\n\nexport default ShortHash;\n","import React, { Component } from 'react';\nimport { Card, Text, Button } from 'rimble-ui';\n\nimport AccountOverview from \"../utilities/components/AccountOverview\";\n\n\nclass WalletBlock extends Component {\n\n  handleConnectAccount = () => {\n    this.props.connectAndValidateAccount(result => {\n      if (result === \"success\") {\n        // success\n        console.log(\"Callback SUCCESS\");\n      } else if (result === \"error\") {\n        // error\n        console.log(\"Callback ERROR\");\n      }\n    })\n  }\n\n  renderContent = () => {\n    if (this.props.account && this.props.accountValidated) {\n      return (\n        <AccountOverview\n          account={this.props.account}\n          accountBalanceLow={this.props.accountBalanceLow}\n          accountBalance={this.props.accountBalance}\n        />\n      )\n    } else {\n      return (\n        <Button onClick={this.handleConnectAccount} width={1}>\n          Connect your wallet\n        </Button>\n      )\n    }\n  }\n\n  render() {\n    return (\n      <Card maxWidth={'640px'} mx={'auto'} p={4} >\n        <Text fontWeight={3} mb={3}>\n          Wallet:\n        </Text>\n        {this.renderContent()}\n      </Card>\n    );\n  }\n\n}\n\nexport default WalletBlock;\n","const TransactionToastMessages = {\n    initialized: {\n      message: \"Change submitted\",\n      secondaryMessage: \"Confirm in MetaMask\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    started: {\n      message: \"Change submitted\",\n      secondaryMessage: \"Confirm in MetaMask\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    pending: {\n      message: \"Processing change...\",\n      secondaryMessage: \"This may take a few minutes\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\"\n    },\n    confirmed: {\n      message: \"First block confirmed\",\n      secondaryMessage: \"Your change is in progress\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\"\n    },\n    success: {\n      message: \"Smart contract value changed\",\n      variant: \"success\"\n    },\n    error: {\n      message: \"Value change failed\",\n      secondaryMessage: \"Could not complete transaction.\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"failure\"\n    }\n  };\n  \n  export default TransactionToastMessages;\n  ","import React from \"react\";\nimport TransactionToastMessages from \"./content/TransactionToastMessages\";\nimport { ToastMessage } from \"rimble-ui\";\n\nclass TransactionToastUtil extends React.Component {\n  // Determines if collections are same size\n  collectionHasNewObject = (prevCollection, currentCollection) => {\n    return (\n      typeof prevCollection === \"undefined\" ||\n      Object.keys(prevCollection).length !==\n        Object.keys(currentCollection).length\n    );\n  };\n\n  // Returns object from currentCollection that doesn't exist in prevCollection\n  getNewObjectFromCollection = (prevCollection, currentCollection) => {\n    if (typeof prevCollection !== \"undefined\") {\n      const objectKey = Object.keys(currentCollection).filter(key => {\n        return !Object.keys(prevCollection).includes(key);\n      });\n      return currentCollection[objectKey];\n    } else {\n      return Object.keys(currentCollection).map(key => {\n        return currentCollection[key];\n      });\n    }\n  };\n\n  // Compare two collections of objects, return single object from current collection that differs from prev collection\n  getUpdatedObjectFromCollection = (prevCollection, currentCollection) => {\n    const updatedTransaction = Object.keys(prevCollection)\n      .map(key => {\n        if (\n          prevCollection[key].lastUpdated !== currentCollection[key].lastUpdated\n        ) {\n          return currentCollection[key];\n        } else {\n          return null;\n        }\n      })\n      .filter(object => object !== null);\n    return updatedTransaction[0];\n  };\n\n  // Returns an transaction from a collection based on a given identifier\n  getTransactionFromCollection = (identifier, collection) => {\n    const object = collection[`tx${identifier}`];\n    return object;\n  };\n\n  // Returns either a new object or finds an updated object in a collection against a previous collection\n  getUpdatedTransaction = (prevCollection, currentCollection) => {\n    let tx = null;\n    let currentTx = {};\n    let prevTx = {};\n\n    if (this.collectionHasNewObject(prevCollection, currentCollection)) {\n      tx = this.getNewObjectFromCollection(prevCollection, currentCollection);\n    } else {\n      currentTx = this.getUpdatedObjectFromCollection(\n        prevCollection,\n        currentCollection\n      );\n      if (currentTx) {\n        prevTx = this.getTransactionFromCollection(\n          currentTx.created,\n          prevCollection\n        );\n      } else {\n        return false;\n      }\n\n      if (currentTx.status !== prevTx.status) {\n        tx = currentTx;\n      }\n    }\n    return tx;\n  };\n\n  // Check for updates to the transactions collection\n  processTransactionUpdates = prevProps => {\n    let tx = null;\n    if (Object.keys(this.props.transactions).length) {\n      tx = this.getUpdatedTransaction(\n        prevProps.transactions,\n        this.props.transactions\n      );\n    }\n\n    if (tx !== null && tx !== false && typeof tx !== \"undefined\") {\n      this.showTransactionToast(tx);\n    }\n  };\n\n  showTransactionToast = transaction => {\n    console.log(\"showTransactionToast: \", { ...transaction });\n    // Get text info for toast\n    let toastMeta = this.getTransactionToastMeta(transaction);\n\n    // Show toast\n    window.toastProvider.addMessage(\".\", toastMeta);\n  };\n\n  getTransactionToastMeta = transaction => {\n    let transactionToastMeta = {};\n    let status = transaction.status;\n\n    switch (status) {\n      case \"initialized\":\n        transactionToastMeta = TransactionToastMessages.initialized;\n        break;\n      case \"started\":\n        transactionToastMeta = TransactionToastMessages.started;\n        break;\n      case \"pending\":\n        transactionToastMeta = TransactionToastMessages.pending;\n        break;\n      case \"confirmed\":\n        transactionToastMeta = TransactionToastMessages.confirmed;\n        break;\n      case \"success\":\n        transactionToastMeta = TransactionToastMessages.success;\n        break;\n      case \"error\":\n        transactionToastMeta = TransactionToastMessages.error;\n        break;\n      default:\n        break;\n    }\n\n    return transactionToastMeta;\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    this.processTransactionUpdates(prevProps);\n  }\n\n  render() {\n    return (\n      <div>\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </div>\n    );\n  }\n}\n\nexport default TransactionToastUtil;\n","import React from \"react\";\nimport { Flex, Box, Text, Button } from \"rimble-ui\";\n\n// Address of the deployed smart contract (from etherscan)\nconst contractAddress = \"0x0f69f0ac4b92bf0d101b5747eed3fa6b653a36f8\";\n\n// Copied from remix ide\nconst contractAbi = [\n  {\n    constant: false,\n    inputs: [],\n    name: \"decrementCounter\",\n    outputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\"\n  },\n  {\n    constant: false,\n    inputs: [],\n    name: \"incrementCounter\",\n    outputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\"\n  },\n  {\n    constant: false,\n    inputs: [],\n    name: \"reset\",\n    outputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\"\n  },\n  {\n    inputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"constructor\"\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"getCounter\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"int256\"\n      }\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\"\n  }\n];\n\nclass SmartContractControls extends React.Component {\n  state = {\n    value: 0,\n    needsUpdate: false\n  };\n\n  // gets the number stored in smart contract storage\n  getNumber = ({ ...props }) => {\n    try {\n      this.props.contract.methods\n        .getCounter()\n        .call()\n        .then(value => {\n          value = Number(value.toString());\n          this.setState({ value, needsUpdate: false });\n          console.log(\"Updated number\");\n        })\n        .catch(error => {\n          console.log(error);\n          this.setState({ error });\n        });\n    } catch (error) {\n      console.log(\"error\", error);\n    }\n  };\n\n  // Check for updates to the transactions collection\n  processTransactionUpdates = prevProps => {\n    Object.keys(this.props.transactions).map(key => {\n      let tx = this.props.transactions[key];\n      console.log(\"Needs updated number: \", tx.status, this.state.needsUpdate);\n      // Will not work if there is a tx started before a prior tx has success -- first will flip needsUpdate to false\n      if (tx.status === \"success\" && this.state.needsUpdate) {\n        console.log(\"Getting updated number.\");\n        this.getNumber();\n        return false;\n      } else {\n        console.log(\"Not updating number.\");\n        return false;\n      }\n    });\n  };\n\n  resetCounter = () => {\n    this.props.contractMethodSendWrapper(\"reset\");\n  };\n\n  incrementCounter = () => {\n    let needsUpdate = true;\n    this.props.contractMethodSendWrapper(\n      \"incrementCounter\",\n      (txStatus, transaction) => {\n        console.log(\"incrementCounter callback: \", txStatus, transaction);\n        if (\n          txStatus === \"confirmation\" &&\n          transaction.status === \"success\" &&\n          needsUpdate\n        ) {\n          this.getNumber();\n          needsUpdate = false;\n        }\n      }\n    );\n  };\n\n  decrementCounter = () => {\n    this.props.contractMethodSendWrapper(\"decrementCounter\");\n  };\n\n  componentDidMount() {\n    // Init the contract after the web3 provider has been determined\n    this.props.initContract(contractAddress, contractAbi).then(() => {\n      // Can finally interact with contract\n      this.getNumber();\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    // this.processTransactionUpdates(prevProps);\n  }\n\n  render() {\n    return (\n      <Box>\n\n        <Flex px={0} justifyContent=\"space-between\" alignItems={'center'}>\n          <Text fontWeight={3}>\n            Smart contract value:\n          </Text>\n\n          <Button.Outline\n            size={\"small\"}\n            onClick={this.resetCounter}\n            disabled={!this.props.account}\n          >\n            Reset\n          </Button.Outline>\n        </Flex>\n\n        <Text fontSize={'5rem'} fontWeight={1} lineHeight={1} textAlign={'center'} my={5}>\n          {this.state.value}\n        </Text>\n\n        <Flex flexDirection={'row'}>\n          <Button\n            onClick={this.decrementCounter}\n            flex={'1'}\n            mr={[2, 3]}\n          >\n            Decrease value\n          </Button>\n          <Button\n            onClick={this.incrementCounter}\n            flex={'1'}\n          >\n            Increase value\n          </Button>\n        </Flex>\n\n      </Box>\n\n    );\n  }\n}\n\nexport default SmartContractControls;\n","import React from \"react\";\nimport styled from 'styled-components'\nimport { Card, Text, Table, Pill, Link } from \"rimble-ui\";\n\nconst TransactionTable = styled(Table)`\n  & {\n    display: block;\n    width: 100%;\n    overflow: auto;\n    border-width: 0;\n  }\n\n  th,\n  td {\n    border: solid;\n    border-width: 1px;\n    border-color: inherit;\n    padding: 0 1.5rem;\n  }\n`;\n\nclass TransactionsCard extends React.Component {\n  render() {\n    return (\n      <Card maxWidth={'640px'} px={4} mx={'auto'}>\n        <Text fontWeight={3} mb={3}>\n          Activity (Transactions):\n        </Text>\n\n        <TransactionTable>\n\n          <thead>\n            {Object.keys(this.props.transactions).length > 0 ? (\n              <tr>\n                <th>Method</th>\n                <th>Status</th>\n                <th>Created</th>\n                <th>Updated</th>\n                <th>Confirmations</th>\n                <th>txHash</th>\n              </tr>\n            ) : null}\n        </thead>\n\n          <tbody>\n            {Object.keys(this.props.transactions).length < 1 ? (\n              <Text textAlign={\"center\"} p={3}>\n                No transactions yet. Increase or decrease the smart contract value\n                to start a transaction.\n              </Text>\n            ) : (\n              Object.keys(this.props.transactions).map((keyName, keyIndex) => {\n                let txHash = \"\";\n                if (this.props.transactions[keyName].transactionHash) {\n                  txHash = this.props.transactions[\n                    keyName\n                  ].transactionHash.toString();\n                  // const txStart = txHash.substr(0, 7);\n                  // const txEnd = txHash.substr(txHash.length - 4);\n                  // txHash = txStart + \"...\" + txEnd;\n                }\n\n                let eventCreated = new Date(this.props.transactions[keyName].created);\n                let eventUpdated = new Date(this.props.transactions[keyName].lastUpdated);\n\n                return (\n                  <tr key={keyIndex}>\n                    <td>\n                      <code>\n                        {this.props.transactions[keyName].method}\n                      </code>\n                    </td>\n                    <td>\n                      <Pill>\n                        {this.props.transactions[keyName].status}\n                      </Pill>\n                    </td>\n                    <td>\n                      {eventCreated.toDateString()}\n                    </td>\n                    <td>\n                      {eventUpdated.toTimeString()}\n                    </td>\n                    <td>\n                      {this.props.transactions[keyName].confirmationCount}\n                    </td>\n                    <td>\n                      <Link href={'//rinkeby.etherscan.io/tx/'+txHash} target='_blank'>\n                        {txHash}\n                      </Link>\n                    </td>\n                  </tr>\n                );\n              })\n            )}\n          </tbody>\n\n        </TransactionTable>\n\n      </Card>\n    );\n  }\n}\n\nexport default TransactionsCard;\n","import React from \"react\";\nimport { Card } from \"rimble-ui\";\n\nimport RimbleWeb3 from \"../utilities/RimbleWeb3\";\nimport TransactionToastUtil from \"../utilities/TransactionToastUtil\";\n\nimport SmartContractControls from \"./SmartContractControls\";\nimport TransactionsCard from \"./TransactionsCard\";\n\nclass PrimaryCard extends React.Component {\n  render() {\n    return (\n      <RimbleWeb3.Consumer>\n        {({\n          contract,\n          account,\n          transactions,\n          initContract,\n          initAccount,\n          contractMethodSendWrapper\n        }) => (\n          <div>\n            <Card maxWidth={'640px'} px={4} mx={'auto'}>\n              <SmartContractControls\n                contract={contract}\n                account={account}\n                transactions={transactions}\n                initContract={initContract}\n                contractMethodSendWrapper={contractMethodSendWrapper}\n              />\n            </Card>\n\n            <TransactionsCard transactions={transactions} />\n            <TransactionToastUtil transactions={transactions} />\n          </div>\n        )}\n      </RimbleWeb3.Consumer>\n    );\n  }\n}\n\nexport default PrimaryCard;\n","import React from \"react\";\nimport { Box, Heading, Text, Link, Flex, Button, Icon, Flash } from \"rimble-ui\";\n\nclass InstructionsCard extends React.Component {\n  render() {\n    return (\n      <Flex justifyContent={\"center\"}>\n        <Box maxWidth={\"640px\"} mt={4} mx={3}>\n          <Flash variant={'info'}>\n            <Flex>\n              <Box m={1} mr={3} >\n                <Icon name=\"Info\" size={'2rem'} />\n              </Box>\n              <Box mr={3} pt={1}>\n                <Heading fontSize={3} my={0} lineHeight={1.5}>\n                  You're going to need Rinkeby ETH\n                </Heading>\n                <Text color={'inherit'} my={2}>\n                  If you don't have any, you can request some for free. All you need is a Facebook or Twitter account.{\" \"}\n                </Text>\n                <Link\n                  href=\"https://faucet.rinkeby.io/\"\n                  target=\"_blank\"\n                  title=\"Head to the Rinkeby faucet\"\n                >\n                  <Box display={'inline-flex'} alignItems={'center'}>\n                    Get Rinkeby ETH\n                    <Icon name={'OpenInNew'} size={'18px'} mb={'2px'} ml={2} />\n                  </Box>\n                </Link>\n              </Box>\n            </Flex>\n          </Flash>\n          <Flex\n            py={4}\n            px={3}\n            alignItems={\"center\"}\n            justifyContent={[\"center\", \"space-between\"]}\n            flexWrap={\"wrap\"}\n          >\n            <Link\n              href=\"https://github.com/ConsenSys/rimble-app-demo\"\n              target=\"_blank\"\n              title=\"Source code for the Rimble App Demo\"\n              mb={[3, \"initial\"]}\n            >\n              View Code GitHub\n            </Link>\n\n            {this.props.route === \"default\" ? (\n              <Button.Outline\n                size=\"small\"\n                onClick={() => this.props.showRoute(\"onboarding\")}\n                width={[1, \"auto\"]}\n              >\n                Onboarding Debugger\n              </Button.Outline>\n            ) : (\n              <Button.Outline\n                size=\"small\"\n                onClick={() => this.props.showRoute(\"default\")}\n                width={[1, \"auto\"]}\n              >\n                Default View\n              </Button.Outline>\n            )}\n          </Flex>\n          <Flash variant=\"\">\n          <Flex>\n          <Box alignItems=\"center\" alignSelf=\"center\" mr={3}>\n            <Icon name=\"Build\" />\n          </Box>\n          <Box alignItems=\"center\" alignSelf=\"center\">\n            <Text fontSize=\"1\">\n              Built with{' '}\n                <Link\n                  href=\"https://github.com/ConsenSys/rimble-ui\"\n                  target=\"_blank\"\n                  title=\"Repo for Rimble UI components\"\n                  mb={[3, \"initial\"]}>\n                Rimble-UI components\n                </Link>{' '}\n              and{' '}\n              <Link\n                href=\"https://github.com/ConsenSys/rimble-web3-components\"\n                target=\"_blank\"\n                title=\"Repo for Rimble Web3 components\"\n                mb={[3, \"initial\"]}>\n              Rimble-Web3-components\n              </Link>\n            </Text>\n            </Box>\n            </Flex>\n          </Flash>\n        </Box>\n      </Flex>\n    );\n  }\n}\n\nexport default InstructionsCard;\n","import React from \"react\";\nimport { Box, Flex, Text } from \"rimble-ui\";\n\nclass NetworkOverview extends React.Component {\n  getNetworkCircleColor = () => {\n    let circleColor = \"#333\";\n    if (this.props.network) {\n      switch (this.props.network.id) {\n        case 1:\n          circleColor = \"#56b3ae\";\n          break;\n        case 2:\n          circleColor = \"#000\";\n          break;\n        case 3:\n          circleColor = \"#ed5a8d\";\n          break;\n        case 4:\n          circleColor = \"#efc35c\";\n          break;\n        case 42:\n          circleColor = \"#6a5ff6\";\n          break;\n        default:\n          circleColor = \"#ccc\";\n      }\n    }\n\n    return circleColor;\n  };\n\n  render() {\n    const networkCircle = {\n      borderRadius: \"50%\",\n      backgroundColor: this.getNetworkCircleColor(),\n      height: \"1em\",\n      width: \"1em\"\n    };\n\n    return (\n      <Flex alignItems={\"center\"}>\n        <Box style={networkCircle} mr={2} />\n        <Text style={{ textTransform: \"capitalize\" }}>\n          {this.props.network.name}\n        </Text>\n      </Flex>\n    );\n  }\n}\n\nexport default NetworkOverview;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Flex,\n  ToastMessage,\n  Box,\n  Button,\n  Link\n} from \"rimble-ui\";\nimport NetworkOverview from \"../utilities/components/NetworkOverview\";\n\nconst DebuggerButtons = props => (\n  <Box mt={4} borderTop={1} borderColor=\"#E8E8E8\" pt={3}>\n    <Heading.h4 textAlign={\"center\"}>Show Modal</Heading.h4>\n    <Button\n      onClick={props.modals.methods.openWrongNetworkModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Wrong network modal\n    </Button>\n\n    <Button\n      onClick={props.modals.methods.openConnectionModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Connection modal\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openConnectionPendingModal}\n      mr={2}\n      mb={2}\n    >\n      Connection pending modal\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openUserRejectedConnectionModal}\n      mr={2}\n      mb={2}\n    >\n      Connection rejected error\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openTransactionConnectionModal}\n      mr={2}\n      mb={2}\n    >\n      Transaction connection\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openValidationPendingModal}\n      mr={2}\n      mb={2}\n    >\n      Verification pending modal\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openUserRejectedValidationModal}\n      mr={2}\n      mb={2}\n    >\n      Verification rejected error\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={event => {\n        props.modals.methods.openLowFundsModal(event);\n      }}\n      mr={2}\n      mb={2}\n    >\n      Low funds\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWeb3BrowserModal}\n      mr={2}\n      mb={2}\n    >\n      Not web3 browser\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWalletModal}\n      mr={2}\n      mb={2}\n    >\n      No Ethereum account\n    </Button>\n  </Box>\n);\n\nclass Web3Debugger extends React.Component {\n  render() {\n    return (\n      <Card maxWidth={\"600px\"} mx={\"auto\"} px={4}>\n        <Heading.h3 textAlign={\"center\"}>Get Connected</Heading.h3>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.validBrowser ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Modern & Web3 Capable Browser</Text>\n          </Flex>\n\n          {!this.props.validBrowser ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">\n                  You current browser is not web3 capable.\n                </Text>\n              </Flex>\n\n              <Link\n                href=\"https://www.google.com/chrome/browser/\"\n                target=\"_blank\"\n              >\n                <Button.Outline size=\"small\">Download Chrome</Button.Outline>\n              </Link>\n            </Flex>\n          ) : null}\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.web3 ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Browser-connected Wallet</Text>\n          </Flex>\n\n          {!this.props.web3 && this.props.validBrowser ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">You do not have a wallet.</Text>\n              </Flex>\n\n              <Link\n                href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n                target=\"_blank\"\n              >\n                <Button.Outline size=\"small\">\n                  Get MetaMask Extension\n                </Button.Outline>\n              </Link>\n            </Flex>\n          ) : null}\n        </Box>\n\n        {this.props.web3 ? (\n          <Flex\n            py={3}\n            my={3}\n            borderTop={1}\n            borderBottom={1}\n            borderColor={\"#E8E8E8\"}\n            textAlign={\"center\"}\n            justifyContent={\"space-around\"}\n            alignItems={\"center\"}\n          >\n            <Button\n              size=\"small\"\n              onClick={this.props.connectAndValidateAccount}\n              disabled={!this.props.web3}\n            >\n              Connect and verify\n            </Button>\n            <Text>- or -</Text>\n            <Button size=\"small\" disabled>\n              Initiate On-Chain Action\n            </Button>\n          </Flex>\n        ) : null}\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.network.isCorrectNetwork ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Correct Network</Text>\n          </Flex>\n\n          {this.props.web3 && !this.props.network.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Box>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Current network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.current} />\n                  </Flex>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Required network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.required} />\n                  </Flex>\n                </Box>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.checkNetwork}>\n                Check Network\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.web3 && this.props.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <NetworkOverview network={this.props.network.current} />\n            </Flex>\n          ) : null}\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.account && this.props.accountValidated ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Wallet connected and verified</Text>\n          </Flex>\n\n          {!this.props.account &&\n          this.props.web3 &&\n          !this.props.userRejectedConnect ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Not connected to this dApp.</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.account && this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n              <Box>\n                <Text color=\"#999\">Connected wallet {this.props.account}</Text>\n                <Text color={this.props.accountBalanceLow ? \"red\" : \"#999\"}>\n                  Account balance {this.props.accountBalance}\n                </Text>\n              </Box>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedConnect ? (\n            <Flex ml={4} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">User rejected Connect request</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {(this.props.accountValidated === null ||\n            this.props.accountValidated === false) &&\n          this.props.web3 ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.accountValidated === false ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedValidation === false ? (\n            <Flex ml={4}>\n              <Icon name=\"Error\" mr={2} color=\"red\" />\n              <Text color=\"red\">Account not verified</Text>\n            </Flex>\n          ) : null}\n        </Box>\n\n        <DebuggerButtons {...this.props} />\n\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </Card>\n    );\n  }\n}\n\nexport default Web3Debugger;\n","import React, { Component } from \"react\";\nimport { ThemeProvider, Box, Flex, Card, Text, Heading } from \"rimble-ui\";\n\nimport RimbleWeb3 from \"./utilities/RimbleWeb3\";\nimport ConnectionBanner from \"@rimble/connection-banner\";\nimport NetworkIndicator from \"@rimble/network-indicator\";\n\nimport Header from \"./components/Header\";\nimport WalletBlock from \"./components/WalletBlock\";\nimport PrimaryCard from \"./components/PrimaryCard\";\nimport InstructionsCard from \"./components/InstructionsCard\";\nimport Web3Debugger from \"./components/Web3Debugger\";\n\nclass App extends Component {\n  state = {\n    route: \"default\"\n  };\n\n  // Optional parameters to pass into RimbleWeb3\n  config = {\n    accountBalanceMinimum: 0.001,\n    requiredNetwork: 4\n  };\n\n  showRoute = route => {\n    this.setState({\n      route\n    });\n  };\n\n  render() {\n    return (\n      <ThemeProvider>\n        <RimbleWeb3 config={this.config}>\n          <RimbleWeb3.Consumer>\n            {({\n              needsPreflight,\n              validBrowser,\n              userAgent,\n              web3,\n              account,\n              accountBalance,\n              accountBalanceLow,\n              initAccount,\n              rejectAccountConnect,\n              userRejectedConnect,\n              accountValidated,\n              accountValidationPending,\n              rejectValidation,\n              userRejectedValidation,\n              validateAccount,\n              connectAndValidateAccount,\n              modals,\n              network,\n              transaction,\n              web3Fallback\n            }) => (\n              <Box>\n                <Header\n                  account={account}\n                  accountBalance={accountBalance}\n                  accountBalanceLow={accountBalanceLow}\n                  initAccount={initAccount}\n                  rejectAccountConnect={rejectAccountConnect}\n                  userRejectedConnect={userRejectedConnect}\n                  accountValidated={accountValidated}\n                  accountValidationPending={accountValidationPending}\n                  rejectValidation={rejectValidation}\n                  userRejectedValidation={userRejectedValidation}\n                  validateAccount={validateAccount}\n                  connectAndValidateAccount={connectAndValidateAccount}\n                  modals={modals}\n                  network={network}\n                />\n\n                <Box maxWidth={'640px'} mx={'auto'} p={3} >\n                  <ConnectionBanner\n                    currentNetwork={network.current.id}\n                    requiredNetwork={this.config.requiredNetwork}\n                    onWeb3Fallback={web3Fallback}\n                  />\n                </Box>\n\n                <Flex maxWidth={'640px'} mx={'auto'} p={3}>\n                  <Heading.h2 mr={3}>\n                    <span role=\"img\" aria-label=\"Waving hand\">\n                      👋\n                    </span>\n                  </Heading.h2>\n\n                  <Text>\n                    Hi there, see Rimble components in action with our demo Ethereum dApp. Change the value below to get started. Check out our repos – links are in the footer!\n                  </Text>\n                </Flex>\n\n                <Card maxWidth={'640px'} mx={'auto'} p={3} px={4}>\n                  <NetworkIndicator\n                    currentNetwork={network.current.id}\n                    requiredNetwork={network.required.id}\n                  />\n                </Card>\n\n                <WalletBlock\n                  account={account}\n                  accountBalance={accountBalance}\n                  accountBalanceLow={accountBalanceLow}\n                  accountValidated={accountValidated}\n                  connectAndValidateAccount={connectAndValidateAccount}\n                />\n\n                {this.state.route === \"default\" ? <PrimaryCard /> : null}\n\n                {this.state.route === \"onboarding\" ? (\n                  <Web3Debugger\n                    validBrowser={validBrowser}\n                    userAgent={userAgent}\n                    web3={web3}\n                    account={account}\n                    accountBalance={accountBalance}\n                    accountBalanceLow={accountBalanceLow}\n                    initAccount={initAccount}\n                    rejectAccountConnect={rejectAccountConnect}\n                    userRejectedConnect={userRejectedConnect}\n                    accountValidated={accountValidated}\n                    accountValidationPending={accountValidationPending}\n                    rejectValidation={rejectValidation}\n                    userRejectedValidation={userRejectedValidation}\n                    validateAccount={validateAccount}\n                    connectAndValidateAccount={connectAndValidateAccount}\n                    modals={modals}\n                    network={network}\n                    transaction={transaction}\n                  />\n                ) : null}\n                <InstructionsCard\n                  showRoute={this.showRoute}\n                  route={this.state.route}\n                />\n              </Box>\n            )}\n          </RimbleWeb3.Consumer>\n        </RimbleWeb3>\n      </ThemeProvider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}